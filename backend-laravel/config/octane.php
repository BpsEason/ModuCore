<?php

use Illuminate\Support\Str;

return [
    /*
    |--------------------------------------------------------------------------
    | Octane Server
    |--------------------------------------------------------------------------
    |
    | 此配置選項控制哪個 Octane 伺服器將用於提供您的應用程式。
    | 支援 "swoole", "roadrunner"。
    |
    */

    'server' => env('OCTANE_SERVER', 'swoole'),

    /*
    |--------------------------------------------------------------------------
    | Server Port
    |--------------------------------------------------------------------------
    |
    | 此選項定義了 Octane 伺服器將監聽的 TCP 連接埠。通常，此連接埠將
    | 被您的前端 Web 伺服器 (如 Nginx) 用於代理請求。
    |
    */

    'port' => env('OCTANE_PORT', 8000),

    /*
    |--------------------------------------------------------------------------
    | Workers
    |--------------------------------------------------------------------------
    |
    | 此值定義了在伺服器啟動時應該啟動多少個應用程式工作程式。通常，您應該
    | 擁有與您的 CPU 核心數相同的 worker 數量。
    |
    */

    'workers' => env('OCTANE_WORKERS', \Illuminate\Support\Facades\CPU::autodetect()),

    /*
    |--------------------------------------------------------------------------
    | Max Requests
    |--------------------------------------------------------------------------
    |
    | 此選項定義了在應用程式工作程式重啟之前，可以處理的最大請求數量。
    | 這有助於防止記憶體洩漏或長時間運行進程可能引起的問題。
    |
    */

    'max_requests' => env('OCTANE_MAX_REQUESTS', 500),

    /*
    |--------------------------------------------------------------------------
    | RoadRunner Binary
    |--------------------------------------------------------------------------
    |
    | 如果您選擇使用 RoadRunner 作為您的 Octane 伺服器，您應該確保
    | 提供的路徑指向 RoadRunner 二進位檔案。否則，Octane 將嘗試
    | 從專案的 "vendor" 目錄下載它。
    |
    */

    'rr_binary' => env('OCTANE_RR_BINARY'),

    /*
    |--------------------------------------------------------------------------
    | Swoole Flags
    |--------------------------------------------------------------------------
    |
    | 此值控制傳遞給 Swoole 伺服器建構子的位元旗標。這些旗標
    | 應該是任何有效的 Swoole 定義位元旗標的組合。
    |
    */

    'swoole_flags' => env('OCTANE_SWOOLE_FLAGS', SWOOLE_BASE),

    /*
    |--------------------------------------------------------------------------
    | Swoole Tables
    |--------------------------------------------------------------------------
    |
    | 您可以使用 Swoole 表格在您的 Octane 工作程式之間共享狀態。
    | 表格的鍵必須是字串，值可以是字串、整數或浮點數。
    |
    */

    'swoole_tables' => [
        // 'example:1000' => [
        //     'name' => Worker::TABLE_TYPE_STRING,
        //     'age' => Worker::TABLE_TYPE_INT,
        //     'height' => Worker::TABLE_TYPE_FLOAT,
        // ],
    ],

    /*
    |--------------------------------------------------------------------------
    | Swoole HTTP Settings
    |--------------------------------------------------------------------------
    |
    | 此陣列中的值將作為選項傳遞給 Swoole 伺服器。
    | 請查閱 Swoole 文件以了解所有可用選項。
    |
    */

    'swoole_http_settings' => [
        'log_file' => storage_path('logs/swoole_http.log'), // Swoole 運行日誌
        'daemonize' => env('OCTANE_DAEMONIZE', false), // 是否以後台守護進程運行
        'enable_static_handler' => true, // 啟用靜態檔案處理
        'document_root' => public_path(), // 靜態檔案根目錄
        'buffer_output_size' => 4 * 1024 * 1024, // 緩衝區大小 4MB
        'max_request_count' => env('OCTANE_MAX_REQUESTS', 500), // 與 max_requests 相同
        'open_tcp_nodelay' => true, // 開啟 TCP_NODELAY
        'http_compression' => true, // 啟用 HTTP 壓縮
        'http_compression_level' => 6, // 壓縮級別 (1-9)
        'task_worker_num' => env('OCTANE_TASK_WORKERS', 0), // 任務工作程式數量 (可選，用於異步任務)
        // 更多選項請參考 Swoole 文檔：https://www.swoole.com/docs/modules/swoole-server/configuration
    ],

    /*
    |--------------------------------------------------------------------------
    | Cache Table
    |--------------------------------------------------------------------------
    |
    | 此選項定義了用於在工作程式之間共享記憶體快取的表格名稱。
    |
    */

    'cache_table' => [
        'size' => 1000,
        'expire' => 10,
    ],

    /*
    |--------------------------------------------------------------------------
    | Octane Watchers
    |--------------------------------------------------------------------------
    |
    | 您可以定義應被 Octane 監視的檔案，以便在這些檔案更改時
    | 自動重啟伺服器工作程式。這在開發過程中非常有用。
    |
    */

    'watch' => [
        'app/**/*.php',
        'config/**/*.php',
        'database/**/*.php',
        'resources/**/*.php',
        'routes/**/*.php',
        'public/**/*.php',
        'app/Modules/**/*.php', // 監視新增的模組目錄
        'app/Core/**/*.php',    // 監視核心模型目錄
    ],

    /*
    |--------------------------------------------------------------------------
    | Octane Warmup
    |--------------------------------------------------------------------------
    |
    | 您可以指定在 Octane 啟動時應該預載入哪些檔案，
    | 以便在應用程式處理第一個請求之前將其載入到記憶體中。
    |
    */

    'warm' => [
        base_path('routes/api.php'),
        base_path('app/Modules/User/routes.php'), // 預載入模組路由
        base_path('app/Modules/Payment/routes.php'),
        base_path('app/Modules/Sms/routes.php'),
        base_path('app/Modules/Rbac/routes.php'),
        // 您可以根據需要添加更多重要的檔案
    ],

    /*
    |--------------------------------------------------------------------------
    | Octane Pools
    |--------------------------------------------------------------------------
    |
    | 您可以配置數據庫連接池、Redis 連接池等，以確保在長時間運行
    | 的進程中連接的穩定性和重用性。
    |
    */

    'pools' => [
        'mysql' => [
            'max_active' => 10,
            'max_wait' => 5,
            'max_idle' => 10,
            'min_idle' => 5,
        ],
        'redis' => [ // 針對 Redis 的連接池配置
            'max_active' => 10,
            'max_wait' => 5,
            'max_idle' => 10,
            'min_idle' => 5,
        ],
    ],
];
